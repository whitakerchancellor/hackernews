{"version":3,"sources":["App.js","index.js"],"names":["PATH_BASE","cookies","Cookies","App","props","state","cookie","results","searchKey","searchTerm","get","error","needsToSearchTopStories","bind","setSearchTopStories","onDismiss","fetchSearchTopStories","onSearchChange","onSearchSubmit","this","page","setState","isLoading","fetch","then","response","json","result","hits","oldHits","updatedHits","id","filter","item","objectID","event","target","value","set","path","preventDefault","list","className","onChange","onSubmit","onClick","Component","Search","children","type","largeColumn","width","midColumn","smallColumn","Table","map","key","style","href","url","title","author","num_comments","points","Button","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.46c1d6b6.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport Cookies from 'universal-cookie';\n\nconst DEFAULT_QUERY = 'redux';\nconst DEFAULT_HPP = '100';\n\nconst PATH_BASE = 'https://hn.algolia.com/api/v1';\nconst PATH_SEARCH = '/search';\nconst PARAM_SEARCH = 'query=';\nconst PARAM_PAGE = 'page=';\nconst PARAM_HPP = 'hitsPerPage=';\n\nconst cookies = new Cookies();\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      cookie: cookies,\n      results: null,\n      searchKey: '',\n      searchTerm: cookies.get('savedSearch') || DEFAULT_QUERY,\n      error: null,\n    };\n\n    this.needsToSearchTopStories = this.needsToSearchTopStories.bind(this);\n    this.setSearchTopStories = this.setSearchTopStories.bind(this);\n    this.onDismiss = this.onDismiss.bind(this);\n    this.fetchSearchTopStories = this.fetchSearchTopStories.bind(this);\n    this.onSearchChange = this.onSearchChange.bind(this);\n    this.onSearchSubmit = this.onSearchSubmit.bind(this);\n  }\n\n  needsToSearchTopStories(searchTerm) {\n    return !this.state.results[searchTerm];\n  }\n  fetchSearchTopStories(searchTerm, page = 0) {\n      this.setState({ isLoading: true });\n      fetch(`${PATH_BASE}${PATH_SEARCH}?${PARAM_SEARCH}${searchTerm}&${PARAM_PAGE}${page}&${PARAM_HPP}${DEFAULT_HPP}`)\n      .then(response => response.json())\n      .then(result => this.setSearchTopStories(result));\n  }\n\n  setSearchTopStories(result) {\n    const { hits, page } = result;\n    const { searchKey, results } = this.state;\n\n    const oldHits = results && results[searchKey]\n      ? results[searchKey].hits\n      : [];\n\n    const updatedHits = [\n      ...oldHits,\n      ...hits\n    ];\n\n    this.setState({\n      results: {\n        ...results, [searchKey]: { hits: updatedHits, page }\n      }\n    });\n  }\n\n  componentDidMount() {\n    const { searchTerm } = this.state;\n    this.setState({ searchKey: searchTerm });\n    this.fetchSearchTopStories(searchTerm);\n\n  }\n\n  onDismiss(id) {\n    const { searchKey, results } = this.state;\n    const { hits, page } = results[searchKey];\n\n    const isNotId = item => item.objectID !== id;\n    const updatedHits = hits.filter(isNotId);\n    this.setState({\n      results: { ...results, [searchKey]: { hits: updatedHits, page } }\n    });\n  }\n\n  onSearchChange(event) {\n    this.setState({ searchTerm: event.target.value });\n\n  }\n\n  onSearchSubmit(event) {\n    const { searchTerm, cookie } = this.state;\n    this.setState({ searchKey: searchTerm });\n    cookie.set('savedSearch', searchTerm, { path: '/' });\n\n    if (this.needsToSearchTopStories(searchTerm)) {\n      this.fetchSearchTopStories(searchTerm);\n    }\n\n    event.preventDefault();\n  }\n\n  render() {\n    const { searchTerm, results, searchKey, error } = this.state;\n    const page = (results && results[searchKey] && results[searchKey].page) || 0;\n    const list = (results && results[searchKey] && results[searchKey].hits) || [];\n\n    if (error) {\n      return <p>Something went wrong.</p>\n    }\n\n    return (\n      <div className=\"page\">\n        <div className=\"interactions\">\n          <Search\n            onChange={this.onSearchChange}\n            value={searchTerm}\n            onSubmit={this.onSearchSubmit}\n            >\n            Search\n          </Search>\n        </div>\n        {error ?\n          <div className=\"interactions\">\n            <p>Something went wrong.</p>\n          </div> :\n          <Table\n            list={list}\n            onDismiss={this.onDismiss}\n          />}\n        <div className=\"interactions\">\n          <Button onClick={() => this.fetchSearchTopStories(searchKey, page + 1)}>\n            More\n            </Button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport const Search = ({ value, onChange, onSubmit, children }) =>\n  <form onSubmit={onSubmit} >\n    <input\n      type=\"text\"\n      onChange={onChange}\n      value={value}\n    />\n    <button type=\"submit\">\n      {children}\n    </button>\n  </form>\n\n\nconst largeColumn = { width: '40%', };\nconst midColumn = { width: '30%', };\nconst smallColumn = { width: '10%', };\n\nexport const Table = ({ list, onDismiss }) =>\n  <div className=\"table\">\n    {list.map(item =>\n      <div key={item.objectID} className=\"table-row\">\n        <span style={largeColumn}>\n          <a href={item.url}>{item.title}</a></span>\n\n        <span style={midColumn}>\n          {item.author}</span>\n\n        <span style={smallColumn}>\n          {item.num_comments}</span>\n\n        <span style={smallColumn}>\n          {item.points}</span>\n\n        <span style={smallColumn}>\n          <Button onClick={() => onDismiss(item.objectID)}\n            type=\"button\"\n            className=\"button-inline\">\n            Dismiss\n              </Button>\n        </span>\n      </div>\n    )}\n  </div>\n\nexport const Button = ({ onClick, className, children }) =>\n  <button\n    onClick={onClick}\n    className={className}\n    type=\"button\">\n    {children}\n  </button>\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\nif (module.hot) {\n  module.hot.accept()\n}\n"],"sourceRoot":""}